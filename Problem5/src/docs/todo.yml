tags:
  - name: Todos
    description: Todo management APIs

paths:
  /todos:
    post:
      summary: Create a todo
      description: Create a new todo item
      tags: [Todos]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  minLength: 10
                completed:
                  type: boolean
                  default: false
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        "400":
          $ref: '#/components/responses/BadRequest'

    get:
      summary: Get all todos
      description: Get all todos with pagination and filtering options
      tags: [Todos]
      parameters:
        - in: query
          name: title
          schema:
            type: string
            minLength: 3
          description: Todo title for filtering
        - in: query
          name: completed
          schema:
            type: boolean
          description: Filter by completion status
        - in: query
          name: sort
          schema:
            type: string
            enum: [createdAt, updatedAt]
            default: createdAt
          description: Sort by field
        - in: query
          name: order
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
          description: Sort order
        - in: query
          name: take
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of records per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTodoResponse'

  /todos/{todoId}:
    get:
      summary: Get a todo
      description: Get todo by ID
      tags: [Todos]
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        "404":
          $ref: '#/components/responses/NotFound'

    patch:
      summary: Update a todo
      description: Update todo by ID
      tags: [Todos]
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            type: string
          description: Todo ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 10
                completed:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a todo
      description: Delete todo by ID
      tags: [Todos]
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        "204":
          description: No content
        "404":
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PaginatedTodoResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        page:
          type: integer
        take:
          type: integer
        totalPages:
          type: integer
        totalResults:
          type: integer

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              message:
                type: string

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 404
              message:
                type: string
